syntax = "proto3";

package co.topl.brambl.models;

import 'validate/validate.proto';
import 'scalapb/scalapb.proto';
import 'scalapb/validate.proto';

import 'brambl/models/identifier.proto';
import 'brambl/models/known_identifier.proto';

// An address is a location specific (network + ledger) path to a certain Identitier
message Address {
    // the chain an Address will settle to (targets the security behind an Addresses usage)
    uint32 network = 1;
    // the application an Address interacts with directly
    uint32 ledger = 2;
    // determines whether this is a SpendableAddress -> (id => KnownIdentifier) or an IdentifiedAddress -> (id => Identifier)
    oneof value {
        Identifier identifier = 3;
        KnownIdentifier knownIdentifier = 4;
    };
}

option (scalapb.options) = {
    [scalapb.validate.file] {
        validate_at_construction: true
    }
    field_transformations: [
        {
            when: {options: {[validate.rules] {message: {required: true}}}}
            set: {
                [scalapb.field] {
                    required: true
                }
            }
        }
    ]
};