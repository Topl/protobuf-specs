syntax = "proto3";

package co.topl.brambl.models.box;

import 'validate/validate.proto';

import 'quivr/models/shared.proto';
import 'consensus/models/staking.proto';
import 'brambl/models/identifier.proto';
import 'brambl/models/box/asset.proto';
import 'brambl/models/address.proto';
import "google/protobuf/struct.proto";


// The value contained in a box
message Value {
  oneof value {
    LVL lvl = 1;
    TOPL topl = 2;
    Asset asset = 3;
    Group group = 4;
  }
  // A payment token
  message LVL {
    quivr.models.Int128 quantity = 1 [(validate.rules).message.required = true];
  }
  // A staking token
  message TOPL {
    quivr.models.Int128 quantity = 1 [(validate.rules).message.required = true];
    // Optional.  If provided, the registration will take effect at the start of 2 epochs from now. If not provided, this token will not be used for staking purposes.
    co.topl.consensus.models.StakingRegistration registration = 3;

  }
  // A user-defined token
  message Asset {
    string label = 1;
    quivr.models.Int128 quantity = 2 [(validate.rules).message.required = true];
    quivr.models.SmallData metadata = 3 [(validate.rules).message.required = true];
  }

  // A group constructor token
  message Group {
    // Identifies the group policy for humans (do not confuse with the actual group identifier)
    string label = 1;
    // An optional series identifier. When this series identifier is defined, this groups that implement this policy can only be used to mint assets with the aforementioned series identifier
    SeriesId fixedSeries = 2;
    // The address of a UTXO. The UTXO contains the LVLs that are paid for minting the group constructor token.
    TransactionOutputAddress transactionOutputAddress = 3 [(validate.rules).message.required = true];
    // The ID of _this_ Group.  This value is optional and its contents are not included in the signable or identifiable data.  Clients which _can_ verify
    // this value should verify this value, but some clients may not be able to or need to, in which case this field acts as a convenience.
    // Specification: GroupId: SHA-256(label + fixedSeries + transactionOutputAddress)
    GroupId groupId = 4;
  }

  // A series constructor token
  message Series {
    // The human readable name of this series. (do not confuse with the actual series identifier)
    string label = 1;
    // The address of a UTXO. The UTXO contains the LVLs that are paid for minting the series constructor token.
    TransactionOutputAddress transactionOutputAddress = 2 [(validate.rules).message.required = true];
    //  This is an optional field.
    //  When provided it fixes the quantity of tokens that can be minted when this series is consumed,
    //  and the series constructor is burned by the minting transaction.
    //  When not provided, the series constructor is not burned, thus making the token supply unlimited.
    quivr.models.Int128 tokenSupply = 3;
    //Describes the fungibility of the assets minted using the series constructor token derived from this policy.
    FungibilityType fungibility = 4;
    // Describes the behavior of the quantity field of the assets minted using the series constructor derived from this policy.
    QuantityDescriptorType quantityDescriptor = 5;
    // Describes the schema of the data stored in the metadata field of the Asset Minting Statement.
    google.protobuf.Struct ephemeralMetadataScheme = 6;
    // Describes the schema of the data stored in the Asset Token.
    google.protobuf.Struct permanentMetadataScheme = 7;
    // The ID of _this_ Series.  This value is optional and its contents are not included in the signable or identifiable data.  Clients which _can_ verify
    // this value should verify this value, but some clients may not be able to or need to, in which case this field acts as a convenience.
    // Specification: GroupId: SHA-256(label + transactionOutputAddress + tokenSupply + fungibility + quantityDescriptor)
    SeriesId seriesId = 8;
  }

}
