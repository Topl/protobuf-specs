syntax = "proto3";

package co.topl.proto.ledger;

import "common/utility.proto";
import "ledger/transaction.proto";

// Captures the ordering of transaction IDs within a block
message BlockBody {
  // The commitment/accumulator of the block body
  // todo: does the header ID already commit us to the txRoot?
  bytes txRoot = 3; 
  // A fuzzy search for addresses associated with this block
  bytes bloomFilter = 4;
  // A list of Transaction IDs included in this block
  repeated co.topl.proto.common.TransactionId transactionIds = 1;
  // Optional metadata stamped by the operator.  Must be latin-1 encoded, and
  // must be at most 32 bytes in length.
  bytes metadata = 10;
}

// Captures the ordering of transactions (not just IDs) within a block
message FullBlockBody {
  // The commitment/accumulator of the block body
  // todo: does the header ID already commit us to the txRoot?
  bytes txRoot = 3; 
  // A fuzzy search for addresses associated with this block
  bytes bloomFilter = 4;
  // A list of Transactions included in this block
  repeated co.topl.proto.ledger.Transaction transaction = 1;
  // Optional metadata stamped by the operator.  Must be latin-1 encoded, and
  // must be at most 32 bytes in length.
  bytes metadata = 10;
}